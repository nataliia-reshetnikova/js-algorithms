function findLongestSubstring(str) {
  if (str.length < 1) return 0;
  let start = 0;
  let end = 0;
  let maxLen = 0;
  let curString = "";

  while (start < str.length) {
    // if current window doesn't include the given char
    // move the window to right
    if (curString.indexOf(str[end]) === -1 && end <= str.length) {
      curString += str[end];
      maxLen = Math.max(maxLen, end - start);
      end++;
    }
    // if current window has the given char
    // we can start counting new string from start+1
    else if (curString.indexOf(str[end]) > -1 && end < str.length) {
      maxLen = Math.max(maxLen, end - start);
      start++;
      curString = str[start];
      end = start + 1;
    } else {
      break;
    }
  }
  return maxLen;
}

function findLongestSubstring(str) {
  let longest = 0;
  let seen = {};
  let start = 0;

  for (let i = 0; i < str.length; i++) {
    let char = str[i];
    if (seen[char]) {
      start = Math.max(start, seen[char]);
    }
    // index - beginning of substring + 1 (to include current in count)
    longest = Math.max(longest, i - start + 1);
    // store the index of the next char so as to not double count
    seen[char] = i + 1;
  }
  return longest;
}

console.log(findLongestSubstring("")); // 0
console.log(findLongestSubstring("rithmschool")); // 7 rithmsc
console.log(findLongestSubstring("thisisawesome")); // 6 awesom
console.log(findLongestSubstring("thecatinthehat")); // 7 hecatin
console.log(findLongestSubstring("bbbbbb")); // 1 b
console.log(findLongestSubstring("longestsubstring")); // 8 ubstring
console.log(findLongestSubstring("thisishowwedoit")); // 6 wedoit
